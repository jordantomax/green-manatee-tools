AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Green Manatee Tools - S3 app assets, CloudFront distribution

Parameters:
  CompanyPrefix:
    Type: String
    Default: "gm"

  AppName:
    Type: String
    Default: "tools-frontend"

  Env:
    Type: String
    Default: "staging"
    AllowedValues:
      - prod
      - staging

  HostedZoneId:
    Type: String
    Description: ID of the existing Route 53 hosted zone

  CertificateArn:
    Type: String
    Description: ARN of the existing wildcard certificate

Conditions:
  IsProd: !Equals [!Ref Env, 'prod']

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${CompanyPrefix}-${AppName}-${Env}'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontServicePrincipalRead
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: 's3:GetObject'
            Resource: !Sub '${S3Bucket.Arn}/*'
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${Distribution}'

  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${AppName}-${Env}-oac'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
          - !If 
            - IsProd
            - !Sub 'tools.thegreenmanatee.com'
            - !Sub 'tools-${Env}.thegreenmanatee.com'
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021

        Origins:
          - Id: S3Origin
            DomainName: !Sub '${S3Bucket}.s3.amazonaws.com'
            OriginAccessControlId: !Ref OriginAccessControl
            S3OriginConfig: {}

        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD]
          CachedMethods: [GET, HEAD]
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none

        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !If 
        - IsProd
        - !Sub 'tools.thegreenmanatee.com'
        - !Sub 'tools-${Env}.thegreenmanatee.com'
      Type: A
      AliasTarget:
        DNSName: !GetAtt Distribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront hosted zone ID (constant for all CloudFront distributions)

Outputs:
  S3BucketName:
    Value: !Ref S3Bucket

  CloudFrontDistributionId:
    Value: !Ref Distribution

  DomainName:
    Value: !Ref DNSRecord